
CREATE TABLE DI_CLIENT
(
	ID INT(11) AUTO_INCREMENT PRIMARY KEY,
	CODE VARCHAR(200) NULL,
	NAME VARCHAR(200) NULL,
	IC_NO VARCHAR(20) DEFAULT 0 NOT NULL,
	ADDRESS1 VARCHAR(200) DEFAULT 0 NOT NULL,
	ADDRESS2 VARCHAR(200) DEFAULT 0 NOT NULL,
	ADDRESS3 VARCHAR(200) DEFAULT 0 NOT NULL,
	POSTCODE VARCHAR(30) DEFAULT 0 NOT NULL,
	PHONE_NO VARCHAR(20) DEFAULT 0 NOT NULL,
	CREATED_AT VARCHAR(200) NULL,
	UPDATED_AT VARCHAR(200) NULL
)
COMMENT 'CLIENT' ENGINE=INNODB;

CREATE TABLE DI_STOCK_CODE
(
	ID INT(11) AUTO_INCREMENT PRIMARY KEY,
	CODE VARCHAR(200) NULL,
	DESCRIPTION VARCHAR(200) NULL,
	PRICE INT(11) DEFAULT 0 NOT NULL,
	CREATED_AT VARCHAR(200) NULL,
	UPDATED_AT VARCHAR(200) NULL
)
COMMENT 'STOCK CODE LOOKUP' ENGINE=INNODB;

CREATE TABLE DI_STOCK_ENTRY
(
	ID INT(11) AUTO_INCREMENT PRIMARY KEY,
	STOCK_CODE_ID INT(11) NOT NULL,
	QUANTITY INT(11) DEFAULT 0 NOT NULL,
	CREATED_AT VARCHAR(200) NULL,
	UPDATED_AT VARCHAR(200) NULL
)
COMMENT 'STOCK' ENGINE=INNODB;
ALTER TABLE DI_STOCK_ENTRY ADD CONSTRAINT FK_STOCK_STOCK_CODE_ID FOREIGN KEY (STOCK_CODE_ID) REFERENCES DI_STOCK_CODE(ID);

CREATE OR REPLACE VIEW DI_STOCK AS
  SELECT SUM(QUANTITY) AS QUANTITY, STOCK_CODE_ID
  FROM DI_STOCK_ENTRY GROUP BY STOCK_CODE_ID;

CREATE TABLE DI_ORDER
(
	ID INT(11) AUTO_INCREMENT PRIMARY KEY,
	CLIENT_ID INT(11) NOT NULL,
	ORDER_NO VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(200) NOT NULL,
	TOTAL_AMOUNT DECIMAL(13,2) DEFAULT 0.00 NOT NULL,
	DEPOSIT DECIMAL(13,2) DEFAULT 0.00 NOT NULL,
	DATE_DELIVERY DATETIME NULL,
	STATUS INT(11) DEFAULT 0 NOT NULL,
	CREATED_AT VARCHAR(200) NULL,
	UPDATED_AT VARCHAR(200) NULL
)
COMMENT 'ORDER' ENGINE=INNODB;
CREATE INDEX IX_ORDER_CLIENT_ID ON DI_ORDER (ORDER_NO);
ALTER TABLE DI_ORDER ADD CONSTRAINT FK_ORDER_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES DI_CLIENT(ID);

CREATE TABLE DI_ORDER_ITEM
(
	ID INT(11) AUTO_INCREMENT PRIMARY KEY,
	ORDER_ID INT(11) NOT NULL,
	STOCK_CODE_ID INT(11) NOT NULL,
	QUANTITY INT(11) DEFAULT 0 NOT NULL,
	AMOUNT DECIMAL(13,2) DEFAULT 0.00 NOT NULL,
	CREATED_AT VARCHAR(200) NULL,
	UPDATED_AT VARCHAR(200) NULL
)
COMMENT 'ORDER ITEM' ENGINE=INNODB;
ALTER TABLE DI_ORDER_ITEM ADD CONSTRAINT FK_ORDER_ITEM_ORDER_ID FOREIGN KEY (ORDER_ID) REFERENCES DI_ORDER(ID);
ALTER TABLE DI_ORDER_ITEM ADD CONSTRAINT FK_ORDER_ITEM_STOCK_CODE_ID FOREIGN KEY (STOCK_CODE_ID) REFERENCES DI_STOCK_CODE(ID);

CREATE TABLE DI_ORDER_REMARK
(
	ID INT(11) AUTO_INCREMENT PRIMARY KEY,
	ORDER_ID INT(11) NOT NULL,
	REMARK VARCHAR(200) DEFAULT 0 NOT NULL,
	CREATED_AT VARCHAR(200) NULL,
	UPDATED_AT VARCHAR(200) NULL
)
COMMENT 'ORDER REMARK' ENGINE=INNODB;
ALTER TABLE DI_ORDER_REMARK ADD CONSTRAINT FK_ORDER_REMARK_ORDER_ID FOREIGN KEY (ORDER_ID) REFERENCES DI_ORDER(ID);

CREATE TABLE DI_ORDER_STATUS
(
	ID INT(11) AUTO_INCREMENT PRIMARY KEY,
	STATUS INT(11) NOT NULL,
	CREATED_AT VARCHAR(200) NULL,
	UPDATED_AT VARCHAR(200) NULL
)
COMMENT 'ORDER STATUS' ENGINE=INNODB;

CREATE TABLE DI_NOTIFICATION
(
	ID INT(11) AUTO_INCREMENT PRIMARY KEY,
	MESSAGE VARCHAR(200) NOT NULL,
	CREATED_AT VARCHAR(200) NULL,
	UPDATED_AT VARCHAR(200) NULL
)
COMMENT 'NOTIFICATION' ENGINE=INNODB;

CREATE TABLE DI_STATE_CODE
(
  ID INT(11) AUTO_INCREMENT PRIMARY KEY,
  CODE VARCHAR(30) NOT NULL,
  NAME VARCHAR(200) NOT NULL,
	CREATED_AT VARCHAR(200) NULL,
	UPDATED_AT VARCHAR(200) NULL
)
COMMENT 'STATE_CODE' ENGINE = INNODB;

-- todo: di_configuration
-- key, value, (id, created_at, updated_at)
-- seed data
 CREATE TABLE DI_CONFIGURATION
 (
  ID INT(11) AUTO_INCREMENT PRIMARY KEY,
  KEY_ VARCHAR(200) NOT NULL,
  VALUE_ VARCHAR(200) NULL,
  CREATED_AT VARCHAR(200) NULL,
  UPDATED_AT VARCHAR(200) NULL
 )
